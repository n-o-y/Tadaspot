<div class="container-fluid border">
  <div class="row border">
    <div class="border col-3">
      <div class="row my-2 justify-content-center">
        <%= attachment_image_tag @post, :image, style:"object-fit: contain;", style:"width: 300px; height: 200px;", fallback: "no_image.png" %>
      </div>
      <div class="row m-2">
        <%= @post.name %>
      </div>
      <div class=" row m-2 post-star" data-score="<%= @post.star %>"></div>
      <div class="row m-2">
        <%= @post.introduction %>
      </div>
      <div class="row m-2">
        <%= l @post.created_at %>
        <%= @post.user.name %>さんが投稿
      </div>
      <div class="row m-2" id="like_buttons_<%=@post.id%>">
        <%= render 'likes/like', post: @post %>
      </div>
      <% if @post.user == current_user %>
        <%= link_to "投稿を編集する", edit_post_path(@post), class:"btn btn-info" %>
        <%= link_to "投稿を削除する", post_path(@post), method: :delete, class:"btn btn-danger ml-2" %>
      <% end %>
    </div>
   <script>
  $('.post-star').raty({
    readOnly: true,
    score: function(){
      return $(this).attr('data-score');
    },
    path: '/assets'
  });
</script>
    <div class="col-9" id='map'></div>
  </div>
</div>

<script>
  let map;
  let geocoder;
  let marker = [];
  let infoWindow = [];

  function initMap(){
    geocoder = new google.maps.Geocoder();
    post_LatLng = new google.maps.LatLng(
      <%= @post.latitude %>,
      <%= @post.longitude %>
    );

    map = new google.maps.Map(document.getElementById('map'),{
      center: post_LatLng,
      zoom: 14
    });

    let markerData = gon.posts;

    for (let i = 0; i < markerData.length; i++) {
      let markerLatLng = {lat: parseFloat( markerData[i]['latitude'] ), lng: parseFloat( markerData[i]['longitude'] )};
      marker[i] = new google.maps.Marker({
        map: map,
        position: markerLatLng
      });

      const postId = markerData[i]['id'];
      infoWindow[i] = new google.maps.InfoWindow({
        content: '<a href="/posts/' + postId + '">' + markerData[i]['name'] + '</a>'
      });

      markerEvent(i);

    }

    function markerEvent(i) {
      marker[i].addListener('click', function() {
        infoWindow[i].open(map, marker[i]);
      });
    }
  };
</script>
<script>
  function searchAddress(){
    let inputSearchAddress = document.getElementById('search').value;

    geocoder.geocode( { 'address': inputSearchAddress }, function(results, status) {
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }
</script>
<script>
  function currentLocation(){
    navigator.geolocation.getCurrentPosition(function(position) {
      LatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      map = new google.maps.Map(document.getElementById('map'),{
        center: LatLng,
        zoom: 14
      });
      marker = new google.maps.Marker({
        map: map,
        position: LatLng
      });
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%=ENV["GOOGLE_MAP_KEY"]%>&callback=initMap" async defer></script>

